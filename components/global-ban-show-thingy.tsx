/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xEMmZJGu6U1
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Card, CardHeader, CardContent } from "@/components/ui/card"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import Link from "next/link"
import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from "@/components/ui/tooltip"

import { BanEntry, BanReturns } from "@/lib/banParser"
import { ReactNode } from "react"

import { remark } from 'remark';
import html from 'remark-html';

export function GlobalBanShowThingy(props:any) {

  // console.warn(props)

  const bd: BanReturns = props.banData

  // Devoted PrikolsHub-ian ban stuff
  let banStuff: ReactNode[] = []

  bd.bans.forEach((be:BanEntry) => {

    const stupidDate = new Date(((be.bannedUntil as number) || 0)*1000)
    const d = (
      <div key={`${Date.now()}-${Math.random()}`} className="flex items-center gap-4 p-4 rounded-lg bg-muted">
        <TooltipProvider>
          <Tooltip>
            <TooltipTrigger asChild>
              <div className="bg-transparent rounded-md flex items-center justify-center aspect-square w-10">
                <img src={be.banProviderIcon} alt={be.banProvider} className="w-15 h-15 rounded-lg" />
              </div>
            </TooltipTrigger>
            <TooltipContent>{be.banProvider}</TooltipContent>
          </Tooltip>
          <div className="grid gap-1 flex-1">
            <div className="text-base text-foreground">{be.reason}</div>
            {
              (be.moderator === "Unknown") ? null : (<div className="text-sm text-muted-foreground">Moderator: {be.moderator ? be.moderator : "?"}</div>)
            }
            <div className="text-sm text-muted-foreground">{ (be.permBan === true) ? "Banned Forever" : `Banned until ${stupidDate.toLocaleDateString('en-US')} ${stupidDate.toLocaleTimeString('en-US')}` }</div>
          </div>
        </TooltipProvider>
      </div>
    )
    banStuff.push(d)
  })

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader className="bg-primary/10 p-6">
        <div className="flex items-center gap-4">
          <Avatar className="w-16 h-16">
            <AvatarImage src={bd.profilePicture} />
            <AvatarFallback>{bd.displayName.charAt(0)}</AvatarFallback>
          </Avatar>
          <div className="grid gap-1">
            <Link href="#" className="text-xl font-bold" prefetch={false}>
              {bd.displayName}
            </Link>
            <div className="text-sm text-muted-foreground">@{bd.username}</div>
            <div className="text-sm text-muted-foreground">User ID: {bd.userId}</div>
          </div>
        </div>
      </CardHeader>
      <CardContent className="p-6 grid gap-6">
        <div className="grid gap-4">
          <div className="flex items-center justify-between">
            <h3 className="text-lg font-semibold">Global Bans</h3>
            <div className="text-sm text-muted-foreground">{bd.bans.length} ban(s)</div>
          </div>
          <div className="grid gap-4">
            {banStuff.map(x=>x)}
          </div>
        </div>
      </CardContent>
    </Card>
  )
}
